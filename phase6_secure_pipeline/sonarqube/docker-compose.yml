services:
  postgres:
    image: postgres:18rc1-alpine
    container_name: sonar-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: change_me_pg_superuser
      POSTGRES_DB: sonarqube
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      LANG: en_US.utf8
      LC_ALL: en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sonarqube"]
      interval: 10s
      timeout: 5s
      retries: 10

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      # Point SonarQube to Postgres
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: change_me_sonar_user

    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions
      - sonar_logs:/opt/sonarqube/logs
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/api/system/health | grep -q 'GREEN'"]
      interval: 30s
      timeout: 10s
      retries: 10

volumes:
  pgdata:
  sonar_data:
  sonar_extensions:
  sonar_logs:
